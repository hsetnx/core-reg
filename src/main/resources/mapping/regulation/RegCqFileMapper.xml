<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lefinance.regulation.dao.RegCqFileMapper" >
  <resultMap id="BaseResultMap" type="com.lefinance.regulation.domain.RegCqFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="gid" property="gid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="return_code" property="returnCode" jdbcType="CHAR" />
    <result column="return_desc" property="returnDesc" jdbcType="VARCHAR" />
    <result column="return_data" property="returnData" jdbcType="VARCHAR" />
    <result column="trans_return_code" property="transReturnCode" jdbcType="CHAR" />
    <result column="trans_return_desc" property="transReturnDesc" jdbcType="VARCHAR" />
    <result column="is_success" property="isSuccess" jdbcType="BIT" />
    <result column="next_time" property="nextTime" jdbcType="TIMESTAMP" />
    <result column="retry_num" property="retryNum" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="filepath" property="filepath" jdbcType="VARCHAR" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="data_type" property="dataType" jdbcType="VARCHAR" />
    <result column="record_count" property="recordCount" jdbcType="INTEGER" />
  </resultMap>

  <select id="selectByGid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, gid, create_time, update_time, create_user, update_user, return_code,
    return_desc, return_data, trans_return_code, trans_return_desc, is_success, next_time,
    retry_num, status, filepath, filename, data_type, record_count
    from reg_cq_file
    where gid = #{gid,jdbcType=VARCHAR}
  </select>

  <select id="selectByDataType" resultMap="BaseResultMap" parameterType="com.lefinance.regulation.domain.RegCqFile" >
    select id, gid, create_time, update_time, create_user, update_user, return_code,
    return_desc, return_data, trans_return_code, trans_return_desc, is_success, next_time,
    retry_num, status, filepath, filename, data_type, record_count
    from reg_cq_file
    where data_type = #{dataType,jdbcType=VARCHAR}
    AND  status = #{status,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reg_cq_file
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.lefinance.regulation.domain.RegCqFile" >
    insert into reg_cq_file (id, gid, create_time, 
      update_time, create_user, update_user, 
      return_code, return_desc, return_data, 
      trans_return_code, trans_return_desc, is_success, 
      next_time, retry_num, status, 
      filepath, filename, data_type, 
      record_count)
    values (#{id,jdbcType=INTEGER}, #{gid,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{returnCode,jdbcType=CHAR}, #{returnDesc,jdbcType=VARCHAR}, #{returnData,jdbcType=VARCHAR}, 
      #{transReturnCode,jdbcType=CHAR}, #{transReturnDesc,jdbcType=VARCHAR}, #{isSuccess,jdbcType=BIT}, 
      #{nextTime,jdbcType=TIMESTAMP}, #{retryNum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{filepath,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{recordCount,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lefinance.regulation.domain.RegCqFile" >
    update reg_cq_file
    set gid = #{gid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=CHAR},
      return_desc = #{returnDesc,jdbcType=VARCHAR},
      return_data = #{returnData,jdbcType=VARCHAR},
      trans_return_code = #{transReturnCode,jdbcType=CHAR},
      trans_return_desc = #{transReturnDesc,jdbcType=VARCHAR},
      is_success = #{isSuccess,jdbcType=BIT},
      next_time = #{nextTime,jdbcType=TIMESTAMP},
      retry_num = #{retryNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      filepath = #{filepath,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      record_count = #{recordCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, gid, create_time, update_time, create_user, update_user, return_code, 
    return_desc, return_data, trans_return_code, trans_return_desc, is_success, next_time, 
    retry_num, status, filepath, filename, data_type, record_count
    from reg_cq_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, gid, create_time, update_time, create_user, update_user, return_code, 
    return_desc, return_data, trans_return_code, trans_return_desc, is_success, next_time, 
    retry_num, status, filepath, filename, data_type, record_count
    from reg_cq_file
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.lefinance.regulation.domain.RegCqFile">
    update reg_cq_file
    <set>
      <if test="gid != null">
        gid = #{gid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        return_code = #{returnCode,jdbcType=CHAR},
      </if>
      <if test="returnDesc != null">
        return_desc = #{returnDesc,jdbcType=VARCHAR},
      </if>
      <if test="returnData != null">
        return_data = #{returnData,jdbcType=VARCHAR},
      </if>
      <if test="transReturnCode != null">
        trans_return_code = #{transReturnCode,jdbcType=CHAR},
      </if>
      <if test="transReturnDesc != null">
        trans_return_desc = #{transReturnDesc,jdbcType=VARCHAR},
      </if>
      <if test="isSuccess != null">
        is_success = #{isSuccess,jdbcType=BIT},
      </if>
      <if test="nextTime != null">
        next_time = #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="retryNum != null">
        retry_num = #{retryNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="filepath != null">
        filepath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="filename != null">
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="recordCount != null">
        record_count = #{recordCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>